// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: lbbft.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequestVoteArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandidateID      uint32      `protobuf:"varint,1,opt,name=CandidateID,proto3" json:"CandidateID,omitempty"` // only for simpicity, one should get the id from the communication protocol, rather than send it explicitly in the arguments.
	NewView          uint32      `protobuf:"varint,2,opt,name=NewView,proto3" json:"NewView,omitempty"`
	LastPreparedView uint32      `protobuf:"varint,3,opt,name=LastPreparedView,proto3" json:"LastPreparedView,omitempty"`
	LastPreparedSeq  uint32      `protobuf:"varint,4,opt,name=LastPreparedSeq,proto3" json:"LastPreparedSeq,omitempty"`
	Digest           []byte      `protobuf:"bytes,5,opt,name=Digest,proto3" json:"Digest,omitempty"` // 用来验证PreparedCert里面的PrepareHash是否=hash(view+seq+"prepare"+Digest)
	PreparedCert     *QuorumCert `protobuf:"bytes,6,opt,name=PreparedCert,proto3" json:"PreparedCert,omitempty"`
}

func (x *RequestVoteArgs) Reset() {
	*x = RequestVoteArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteArgs) ProtoMessage() {}

func (x *RequestVoteArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteArgs.ProtoReflect.Descriptor instead.
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{0}
}

func (x *RequestVoteArgs) GetCandidateID() uint32 {
	if x != nil {
		return x.CandidateID
	}
	return 0
}

func (x *RequestVoteArgs) GetNewView() uint32 {
	if x != nil {
		return x.NewView
	}
	return 0
}

func (x *RequestVoteArgs) GetLastPreparedView() uint32 {
	if x != nil {
		return x.LastPreparedView
	}
	return 0
}

func (x *RequestVoteArgs) GetLastPreparedSeq() uint32 {
	if x != nil {
		return x.LastPreparedSeq
	}
	return 0
}

func (x *RequestVoteArgs) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *RequestVoteArgs) GetPreparedCert() *QuorumCert {
	if x != nil {
		return x.PreparedCert
	}
	return nil
}

type RequestVoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig *PartialSig `protobuf:"bytes,1,opt,name=Sig,proto3" json:"Sig,omitempty"` // sig content就是: view+candidate id
}

func (x *RequestVoteReply) Reset() {
	*x = RequestVoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestVoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteReply) ProtoMessage() {}

func (x *RequestVoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteReply.ProtoReflect.Descriptor instead.
func (*RequestVoteReply) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{1}
}

func (x *RequestVoteReply) GetSig() *PartialSig {
	if x != nil {
		return x.Sig
	}
	return nil
}

type NewViewArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewView     uint32      `protobuf:"varint,1,opt,name=NewView,proto3" json:"NewView,omitempty"`
	CandidateID uint32      `protobuf:"varint,2,opt,name=CandidateID,proto3" json:"CandidateID,omitempty"` // only for simpicity, one should get the id from the communication protocol, rather than send it explicitly in the arguments.
	NewViewCert *QuorumCert `protobuf:"bytes,3,opt,name=NewViewCert,proto3" json:"NewViewCert,omitempty"`
}

func (x *NewViewArgs) Reset() {
	*x = NewViewArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewViewArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewViewArgs) ProtoMessage() {}

func (x *NewViewArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewViewArgs.ProtoReflect.Descriptor instead.
func (*NewViewArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{2}
}

func (x *NewViewArgs) GetNewView() uint32 {
	if x != nil {
		return x.NewView
	}
	return 0
}

func (x *NewViewArgs) GetCandidateID() uint32 {
	if x != nil {
		return x.CandidateID
	}
	return 0
}

func (x *NewViewArgs) GetNewViewCert() *QuorumCert {
	if x != nil {
		return x.NewViewCert
	}
	return nil
}

type NewViewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View uint32 `protobuf:"varint,1,opt,name=View,proto3" json:"View,omitempty"`
	Seq  uint32 `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
}

func (x *NewViewReply) Reset() {
	*x = NewViewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewViewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewViewReply) ProtoMessage() {}

func (x *NewViewReply) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewViewReply.ProtoReflect.Descriptor instead.
func (*NewViewReply) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{3}
}

func (x *NewViewReply) GetView() uint32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *NewViewReply) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type OrderingArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*Command `protobuf:"bytes,1,rep,name=Commands,proto3" json:"Commands,omitempty"`
}

func (x *OrderingArgs) Reset() {
	*x = OrderingArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderingArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderingArgs) ProtoMessage() {}

func (x *OrderingArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderingArgs.ProtoReflect.Descriptor instead.
func (*OrderingArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{4}
}

func (x *OrderingArgs) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type OrderingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq uint32      `protobuf:"varint,1,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Sig *PartialSig `protobuf:"bytes,2,opt,name=Sig,proto3" json:"Sig,omitempty"` // 同时也作为leader的PrepareReply
}

func (x *OrderingReply) Reset() {
	*x = OrderingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderingReply) ProtoMessage() {}

func (x *OrderingReply) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderingReply.ProtoReflect.Descriptor instead.
func (*OrderingReply) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{5}
}

func (x *OrderingReply) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *OrderingReply) GetSig() *PartialSig {
	if x != nil {
		return x.Sig
	}
	return nil
}

type PrePrepareArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View     uint32     `protobuf:"varint,1,opt,name=View,proto3" json:"View,omitempty"`
	Seq      uint32     `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
	Commands []*Command `protobuf:"bytes,3,rep,name=Commands,proto3" json:"Commands,omitempty"`
}

func (x *PrePrepareArgs) Reset() {
	*x = PrePrepareArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePrepareArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePrepareArgs) ProtoMessage() {}

func (x *PrePrepareArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePrepareArgs.ProtoReflect.Descriptor instead.
func (*PrePrepareArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{6}
}

func (x *PrePrepareArgs) GetView() uint32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PrePrepareArgs) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PrePrepareArgs) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type PrePrepareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig *PartialSig `protobuf:"bytes,1,opt,name=Sig,proto3" json:"Sig,omitempty"`
}

func (x *PrePrepareReply) Reset() {
	*x = PrePrepareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePrepareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePrepareReply) ProtoMessage() {}

func (x *PrePrepareReply) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePrepareReply.ProtoReflect.Descriptor instead.
func (*PrePrepareReply) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{7}
}

func (x *PrePrepareReply) GetSig() *PartialSig {
	if x != nil {
		return x.Sig
	}
	return nil
}

type PrepareArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View uint32      `protobuf:"varint,1,opt,name=View,proto3" json:"View,omitempty"`
	Seq  uint32      `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
	QC   *QuorumCert `protobuf:"bytes,3,opt,name=QC,proto3" json:"QC,omitempty"`
}

func (x *PrepareArgs) Reset() {
	*x = PrepareArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareArgs) ProtoMessage() {}

func (x *PrepareArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareArgs.ProtoReflect.Descriptor instead.
func (*PrepareArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{8}
}

func (x *PrepareArgs) GetView() uint32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *PrepareArgs) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *PrepareArgs) GetQC() *QuorumCert {
	if x != nil {
		return x.QC
	}
	return nil
}

type PrepareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig *PartialSig `protobuf:"bytes,1,opt,name=Sig,proto3" json:"Sig,omitempty"`
}

func (x *PrepareReply) Reset() {
	*x = PrepareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareReply) ProtoMessage() {}

func (x *PrepareReply) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareReply.ProtoReflect.Descriptor instead.
func (*PrepareReply) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{9}
}

func (x *PrepareReply) GetSig() *PartialSig {
	if x != nil {
		return x.Sig
	}
	return nil
}

type CommitArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View uint32      `protobuf:"varint,1,opt,name=View,proto3" json:"View,omitempty"`
	Seq  uint32      `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
	QC   *QuorumCert `protobuf:"bytes,3,opt,name=QC,proto3" json:"QC,omitempty"`
}

func (x *CommitArgs) Reset() {
	*x = CommitArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitArgs) ProtoMessage() {}

func (x *CommitArgs) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitArgs.ProtoReflect.Descriptor instead.
func (*CommitArgs) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{10}
}

func (x *CommitArgs) GetView() uint32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *CommitArgs) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CommitArgs) GetQC() *QuorumCert {
	if x != nil {
		return x.QC
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{11}
}

func (x *Command) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ecdsa的签名
type PartialSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID int32  `protobuf:"varint,1,opt,name=ReplicaID,proto3" json:"ReplicaID,omitempty"`
	R         []byte `protobuf:"bytes,2,opt,name=R,proto3" json:"R,omitempty"`
	S         []byte `protobuf:"bytes,3,opt,name=S,proto3" json:"S,omitempty"`
}

func (x *PartialSig) Reset() {
	*x = PartialSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialSig) ProtoMessage() {}

func (x *PartialSig) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialSig.ProtoReflect.Descriptor instead.
func (*PartialSig) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{12}
}

func (x *PartialSig) GetReplicaID() int32 {
	if x != nil {
		return x.ReplicaID
	}
	return 0
}

func (x *PartialSig) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *PartialSig) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

type QuorumCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sigs       []*PartialSig `protobuf:"bytes,1,rep,name=Sigs,proto3" json:"Sigs,omitempty"`
	SigContent []byte        `protobuf:"bytes,2,opt,name=SigContent,proto3" json:"SigContent,omitempty"`
}

func (x *QuorumCert) Reset() {
	*x = QuorumCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lbbft_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumCert) ProtoMessage() {}

func (x *QuorumCert) ProtoReflect() protoreflect.Message {
	mi := &file_lbbft_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumCert.ProtoReflect.Descriptor instead.
func (*QuorumCert) Descriptor() ([]byte, []int) {
	return file_lbbft_proto_rawDescGZIP(), []int{13}
}

func (x *QuorumCert) GetSigs() []*PartialSig {
	if x != nil {
		return x.Sigs
	}
	return nil
}

func (x *QuorumCert) GetSigContent() []byte {
	if x != nil {
		return x.SigContent
	}
	return nil
}

var File_lbbft_proto protoreflect.FileDescriptor

var file_lbbft_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x62, 0x62, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69,
	0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x2a, 0x0a, 0x10, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x64, 0x56, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x4c, 0x61, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x56, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a,
	0x0f, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x71,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x22, 0x37, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x03, 0x53, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x52, 0x03, 0x53, 0x69, 0x67, 0x22,
	0x7e, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x41, 0x72, 0x67, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x0b, 0x4e, 0x65,
	0x77, 0x56, 0x69, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x43, 0x65, 0x72, 0x74, 0x22,
	0x34, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x53, 0x65, 0x71, 0x22, 0x3a, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x41, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x73, 0x22, 0x46, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x53, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x53, 0x69, 0x67, 0x52, 0x03, 0x53, 0x69, 0x67, 0x22, 0x62, 0x0a, 0x0e, 0x50, 0x72, 0x65,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12,
	0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53, 0x65,
	0x71, 0x12, 0x2a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x36, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x23, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67,
	0x52, 0x03, 0x53, 0x69, 0x67, 0x22, 0x56, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x51, 0x43,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51,
	0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x02, 0x51, 0x43, 0x22, 0x33, 0x0a,
	0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a,
	0x03, 0x53, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x52, 0x03, 0x53,
	0x69, 0x67, 0x22, 0x55, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x02, 0x51, 0x43, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75,
	0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x02, 0x51, 0x43, 0x22, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x52, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53,
	0x22, 0x53, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x52,
	0x04, 0x53, 0x69, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x53, 0x69, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xe4, 0x02, 0x0a, 0x05, 0x4c, 0x42, 0x42, 0x46, 0x54, 0x12,
	0x37, 0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56,
	0x6f, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65,
	0x77, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x77, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x65, 0x2d, 0x7a,
	0x78, 0x68, 0x2f, 0x6c, 0x62, 0x62, 0x66, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lbbft_proto_rawDescOnce sync.Once
	file_lbbft_proto_rawDescData = file_lbbft_proto_rawDesc
)

func file_lbbft_proto_rawDescGZIP() []byte {
	file_lbbft_proto_rawDescOnce.Do(func() {
		file_lbbft_proto_rawDescData = protoimpl.X.CompressGZIP(file_lbbft_proto_rawDescData)
	})
	return file_lbbft_proto_rawDescData
}

var file_lbbft_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_lbbft_proto_goTypes = []interface{}{
	(*RequestVoteArgs)(nil),  // 0: proto.RequestVoteArgs
	(*RequestVoteReply)(nil), // 1: proto.RequestVoteReply
	(*NewViewArgs)(nil),      // 2: proto.NewViewArgs
	(*NewViewReply)(nil),     // 3: proto.NewViewReply
	(*OrderingArgs)(nil),     // 4: proto.OrderingArgs
	(*OrderingReply)(nil),    // 5: proto.OrderingReply
	(*PrePrepareArgs)(nil),   // 6: proto.PrePrepareArgs
	(*PrePrepareReply)(nil),  // 7: proto.PrePrepareReply
	(*PrepareArgs)(nil),      // 8: proto.PrepareArgs
	(*PrepareReply)(nil),     // 9: proto.PrepareReply
	(*CommitArgs)(nil),       // 10: proto.CommitArgs
	(*Command)(nil),          // 11: proto.Command
	(*PartialSig)(nil),       // 12: proto.PartialSig
	(*QuorumCert)(nil),       // 13: proto.QuorumCert
	(*empty.Empty)(nil),      // 14: google.protobuf.Empty
}
var file_lbbft_proto_depIdxs = []int32{
	13, // 0: proto.RequestVoteArgs.PreparedCert:type_name -> proto.QuorumCert
	12, // 1: proto.RequestVoteReply.Sig:type_name -> proto.PartialSig
	13, // 2: proto.NewViewArgs.NewViewCert:type_name -> proto.QuorumCert
	11, // 3: proto.OrderingArgs.Commands:type_name -> proto.Command
	12, // 4: proto.OrderingReply.Sig:type_name -> proto.PartialSig
	11, // 5: proto.PrePrepareArgs.Commands:type_name -> proto.Command
	12, // 6: proto.PrePrepareReply.Sig:type_name -> proto.PartialSig
	13, // 7: proto.PrepareArgs.QC:type_name -> proto.QuorumCert
	12, // 8: proto.PrepareReply.Sig:type_name -> proto.PartialSig
	13, // 9: proto.CommitArgs.QC:type_name -> proto.QuorumCert
	12, // 10: proto.QuorumCert.Sigs:type_name -> proto.PartialSig
	4,  // 11: proto.LBBFT.Ordering:input_type -> proto.OrderingArgs
	6,  // 12: proto.LBBFT.PrePrepare:input_type -> proto.PrePrepareArgs
	8,  // 13: proto.LBBFT.Prepare:input_type -> proto.PrepareArgs
	10, // 14: proto.LBBFT.Commit:input_type -> proto.CommitArgs
	0,  // 15: proto.LBBFT.RequestVote:input_type -> proto.RequestVoteArgs
	2,  // 16: proto.LBBFT.NewView:input_type -> proto.NewViewArgs
	5,  // 17: proto.LBBFT.Ordering:output_type -> proto.OrderingReply
	7,  // 18: proto.LBBFT.PrePrepare:output_type -> proto.PrePrepareReply
	9,  // 19: proto.LBBFT.Prepare:output_type -> proto.PrepareReply
	14, // 20: proto.LBBFT.Commit:output_type -> google.protobuf.Empty
	1,  // 21: proto.LBBFT.RequestVote:output_type -> proto.RequestVoteReply
	3,  // 22: proto.LBBFT.NewView:output_type -> proto.NewViewReply
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_lbbft_proto_init() }
func file_lbbft_proto_init() {
	if File_lbbft_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lbbft_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestVoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewViewArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewViewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderingArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePrepareArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePrepareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lbbft_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lbbft_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lbbft_proto_goTypes,
		DependencyIndexes: file_lbbft_proto_depIdxs,
		MessageInfos:      file_lbbft_proto_msgTypes,
	}.Build()
	File_lbbft_proto = out.File
	file_lbbft_proto_rawDesc = nil
	file_lbbft_proto_goTypes = nil
	file_lbbft_proto_depIdxs = nil
}
